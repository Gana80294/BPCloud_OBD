// <auto-generated />
using System;
using BPCloud_OBD.VendorRegistrationService.DBContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace BPCloud_OBD.VendorRegistrationService.Migrations
{
    [DbContext(typeof(RegistrationContext))]
    partial class RegistrationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("BPCloud_OBD.VendorRegistrationService.Models.BPActivityLog", b =>
                {
                    b.Property<int>("TransID")
                        .HasColumnType("integer")
                        .HasColumnOrder(2);

                    b.Property<int>("LogID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LogID"));

                    b.Property<string>("Activity")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.Property<string>("Time")
                        .HasColumnType("text");

                    b.HasKey("TransID", "LogID");

                    b.ToTable("bp_act_log");
                });

            modelBuilder.Entity("BPCloud_OBD.VendorRegistrationService.Models.BPAttachment", b =>
                {
                    b.Property<int>("AttachmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("AttachmentID"));

                    b.Property<int>("AppID")
                        .HasColumnType("integer");

                    b.Property<string>("AppNumber")
                        .HasColumnType("text");

                    b.Property<byte[]>("AttachmentFile")
                        .HasColumnType("bytea");

                    b.Property<string>("AttachmentName")
                        .HasColumnType("text");

                    b.Property<long>("ContentLength")
                        .HasColumnType("bigint");

                    b.Property<string>("ContentType")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("HeaderNumber")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsHeaderExist")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ProjectName")
                        .HasColumnType("text");

                    b.HasKey("AttachmentID");

                    b.ToTable("bp_doc");
                });

            modelBuilder.Entity("BPCloud_OBD.VendorRegistrationService.Models.BPBank", b =>
                {
                    b.Property<int>("TransID")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("AccountNo")
                        .HasColumnType("text")
                        .HasColumnOrder(2);

                    b.Property<string>("AttachmentName")
                        .HasColumnType("text");

                    b.Property<string>("BankName")
                        .HasColumnType("text");

                    b.Property<string>("Branch")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DocID")
                        .HasColumnType("text");

                    b.Property<string>("IFSC")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsValid")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("TransID", "AccountNo");

                    b.ToTable("bp_bank");
                });

            modelBuilder.Entity("BPCloud_OBD.VendorRegistrationService.Models.BPContact", b =>
                {
                    b.Property<int>("TransID")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Item")
                        .HasColumnType("text")
                        .HasColumnOrder(2);

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Mobile")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("TransID", "Item");

                    b.ToTable("bp_contact");
                });

            modelBuilder.Entity("BPCloud_OBD.VendorRegistrationService.Models.BPIdentity", b =>
                {
                    b.Property<int>("TransID")
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    b.Property<string>("Type")
                        .HasColumnType("text")
                        .HasColumnOrder(2);

                    b.Property<string>("AttachmentContents")
                        .HasColumnType("text");

                    b.Property<string>("AttachmentName")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("DocID")
                        .HasColumnType("text");

                    b.Property<string>("IDNumber")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsValid")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Option")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ValidUntil")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("TransID", "Type");

                    b.ToTable("bp_id");
                });

            modelBuilder.Entity("BPCloud_OBD.VendorRegistrationService.Models.BPText", b =>
                {
                    b.Property<int>("TextID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TextID"));

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Text")
                        .HasColumnType("text");

                    b.HasKey("TextID");

                    b.ToTable("bp_text");
                });

            modelBuilder.Entity("BPCloud_OBD.VendorRegistrationService.Models.BPVendorOnBoarding", b =>
                {
                    b.Property<int>("TransID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnOrder(1);

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TransID"));

                    b.Property<string>("AccountGroup")
                        .HasColumnType("text");

                    b.Property<string>("AddressLine1")
                        .HasColumnType("text");

                    b.Property<string>("AddressLine2")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("CompanyCode")
                        .HasColumnType("text");

                    b.Property<string>("Country")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Department")
                        .HasColumnType("text");

                    b.Property<string>("Email1")
                        .HasColumnType("text");

                    b.Property<string>("Email2")
                        .HasColumnType("text");

                    b.Property<string>("EmamiContactPerson")
                        .HasColumnType("text");

                    b.Property<string>("EmamiContactPersonMail")
                        .HasColumnType("text");

                    b.Property<string>("GSTNumber")
                        .HasColumnType("text");

                    b.Property<string>("GSTStatus")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("LegalName")
                        .HasColumnType("text");

                    b.Property<bool>("MSME")
                        .HasColumnType("boolean");

                    b.Property<string>("MSME_Att_ID")
                        .HasColumnType("text");

                    b.Property<string>("MSME_TYPE")
                        .HasColumnType("text");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PANNumber")
                        .HasColumnType("text");

                    b.Property<string>("Phone1")
                        .HasColumnType("text");

                    b.Property<string>("Phone2")
                        .HasColumnType("text");

                    b.Property<string>("PinCode")
                        .HasColumnType("text");

                    b.Property<string>("Plant")
                        .HasColumnType("text");

                    b.Property<string>("PurchaseOrg")
                        .HasColumnType("text");

                    b.Property<bool>("RP")
                        .HasColumnType("boolean");

                    b.Property<string>("RP_Att_ID")
                        .HasColumnType("text");

                    b.Property<string>("RP_Name")
                        .HasColumnType("text");

                    b.Property<string>("RP_Type")
                        .HasColumnType("text");

                    b.Property<bool>("Reduced_TDS")
                        .HasColumnType("boolean");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .HasColumnType("text");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("TDS_Att_ID")
                        .HasColumnType("text");

                    b.Property<string>("TDS_RATE")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<string>("TypeofIndustry")
                        .HasColumnType("text");

                    b.HasKey("TransID");

                    b.ToTable("bp_vob");
                });

            modelBuilder.Entity("BPCloud_OBD.VendorRegistrationService.Models.TokenHistory", b =>
                {
                    b.Property<int>("TokenHistoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TokenHistoryID"));

                    b.Property<string>("Comment")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("text");

                    b.Property<DateTime>("ExpireOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean");

                    b.Property<string>("OTP")
                        .HasColumnType("text");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<int>("TransID")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UsedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserName")
                        .HasColumnType("text");

                    b.HasKey("TokenHistoryID");

                    b.ToTable("TokenHistories");
                });

            modelBuilder.Entity("BPCloud_OBD.VendorRegistrationService.Models.BPActivityLog", b =>
                {
                    b.HasOne("BPCloud_OBD.VendorRegistrationService.Models.BPVendorOnBoarding", "BPVendorOnBoarding")
                        .WithMany()
                        .HasForeignKey("TransID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BPVendorOnBoarding");
                });

            modelBuilder.Entity("BPCloud_OBD.VendorRegistrationService.Models.BPBank", b =>
                {
                    b.HasOne("BPCloud_OBD.VendorRegistrationService.Models.BPVendorOnBoarding", "BPVendorOnBoarding")
                        .WithMany()
                        .HasForeignKey("TransID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BPVendorOnBoarding");
                });

            modelBuilder.Entity("BPCloud_OBD.VendorRegistrationService.Models.BPContact", b =>
                {
                    b.HasOne("BPCloud_OBD.VendorRegistrationService.Models.BPVendorOnBoarding", "BPVendorOnBoarding")
                        .WithMany()
                        .HasForeignKey("TransID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BPVendorOnBoarding");
                });

            modelBuilder.Entity("BPCloud_OBD.VendorRegistrationService.Models.BPIdentity", b =>
                {
                    b.HasOne("BPCloud_OBD.VendorRegistrationService.Models.BPVendorOnBoarding", "BPVendorOnBoarding")
                        .WithMany()
                        .HasForeignKey("TransID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BPVendorOnBoarding");
                });
#pragma warning restore 612, 618
        }
    }
}
